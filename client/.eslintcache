[{"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\index.js":"1","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\App.js":"3","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\reducers\\index.js":"4","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\Header.js":"5","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\reducers\\authReducer.js":"6","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\actions\\index.js":"7","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\actions\\types.js":"8","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\reducers\\deviceReducer.js":"9","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\DeviceInfo.js":"10","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\Login.js":"11","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\NewDashboard.js":"12","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\listItems.js":"13","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\styles.js":"14","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\Aboutus.js":"15","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\Homepage.js":"16","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\TableInfo.js":"17","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\newtable.js":"18","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\reducers\\deviceCountReducer.js":"19","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\reducers\\deviceOfflineReducer.js":"20","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\OnlineCount.js":"21","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\OfflineCount.js":"22","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\TotalCount.js":"23","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\Maps.js":"24","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\ClickableTable.js":"25","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\Summary.js":"26"},{"size":858,"mtime":1613798818364,"results":"27","hashOfConfig":"28"},{"size":375,"mtime":1612918902217,"results":"29","hashOfConfig":"28"},{"size":878,"mtime":1614030368360,"results":"30","hashOfConfig":"28"},{"size":445,"mtime":1615264744317,"results":"31","hashOfConfig":"28"},{"size":936,"mtime":1613672362722,"results":"32","hashOfConfig":"28"},{"size":333,"mtime":1612933899690,"results":"33","hashOfConfig":"28"},{"size":1056,"mtime":1615356985305,"results":"34","hashOfConfig":"28"},{"size":194,"mtime":1615262712777,"results":"35","hashOfConfig":"28"},{"size":326,"mtime":1612939168562,"results":"36","hashOfConfig":"28"},{"size":695,"mtime":1615319115444,"results":"37","hashOfConfig":"28"},{"size":4345,"mtime":1613511660232,"results":"38","hashOfConfig":"28"},{"size":4496,"mtime":1615776237954,"results":"39","hashOfConfig":"28"},{"size":1061,"mtime":1614033558019,"results":"40","hashOfConfig":"28"},{"size":2272,"mtime":1614041174347,"results":"41","hashOfConfig":"28"},{"size":785,"mtime":1614031585810,"results":"42","hashOfConfig":"28"},{"size":2026,"mtime":1615775012356,"results":"43","hashOfConfig":"28"},{"size":6542,"mtime":1615358558170,"results":"44","hashOfConfig":"28"},{"size":4074,"mtime":1615158148948,"results":"45","hashOfConfig":"28"},{"size":338,"mtime":1615264769688,"results":"46","hashOfConfig":"28"},{"size":340,"mtime":1615264679578,"results":"47","hashOfConfig":"28"},{"size":1187,"mtime":1615357892367,"results":"48","hashOfConfig":"28"},{"size":871,"mtime":1615357302303,"results":"49","hashOfConfig":"28"},{"size":689,"mtime":1615357727385,"results":"50","hashOfConfig":"28"},{"size":3256,"mtime":1616013553862,"results":"51","hashOfConfig":"28"},{"size":4276,"mtime":1615774946808,"results":"52","hashOfConfig":"28"},{"size":983,"mtime":1615775137580,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"6lkmm8",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"56"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\index.js",[],["119","120"],"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\App.js",[],"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\reducers\\index.js",[],"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\Header.js",[],"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\reducers\\authReducer.js",["121"],"import { FETCH_USER} from '../actions/types';\r\n\r\n\r\nexport default function(state = null, action) {\r\n    console.log(action);\r\n    switch(action.type) {\r\n        //if the action is fetch_user send the payload\r\n        case FETCH_USER:\r\n            return action.payload || false;\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\actions\\index.js",[],"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\actions\\types.js",[],"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\reducers\\deviceReducer.js",["122"],"import { FETCH_DEVICE} from '../actions/types';\r\n\r\n\r\nexport default function(state = [], action) {\r\n    console.log(action);\r\n    switch(action.type) {\r\n        //if the action is fetch_user send the payload\r\n        case FETCH_DEVICE:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\DeviceInfo.js",["123"],"import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchDevice} from '../actions';\r\nimport TableInfo from './TableInfo';\r\nimport NewTable from './newtable';\r\n\r\nclass DeviceInfo extends Component {\r\n     componentDidMount(){\r\n         this.props.fetchDevice();    \r\n     }\r\n\r\n     render(){\r\n         console.log(this.props)\r\n         return (\r\n             <div>\r\n                {/* <TableInfo {...this.props}/> */}\r\n                <TableInfo {...this.props}/>\r\n             </div>\r\n         );\r\n     }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return { deviceInfo: state.deviceInfo}\r\n}\r\nexport default connect(mapStateToProps, {fetchDevice})(DeviceInfo);","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\Login.js",[],"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\NewDashboard.js",["124","125","126","127"],"import React, {useEffect} from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\n\r\nimport useStyles from './styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ContactPhoneIcon from '@material-ui/icons/ContactPhone';\r\nimport { connect } from 'react-redux';\r\nimport Aboutus from './Aboutus';\r\nimport Homepage from './Homepage';\r\nimport TableInfo from './TableInfo';\r\nimport Maps from './Maps';\r\nimport ClickableTable from './ClickableTable';\r\n\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction Dashboard(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const [tabs, setTabs] = React.useState('home');\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const loadTabs = () => {\r\n\r\n    switch(tabs) {\r\n        case 'home':\r\n            return <Homepage/>\r\n        case 'maps':\r\n            return <Maps />\r\n        default:\r\n            break;\r\n    }\r\n  }\r\n\r\n   const   renderContent =() => {\r\n  \r\n     switch(props.auth) {\r\n      case null:\r\n        return <a href=\"/api/auth\">Login with Azure</a>;\r\n       default:\r\n        return <a href=\"/#\"><span className=\"white-text text-darken-2\">Admin: {props.auth.given_name} </span></a>\r\n    }\r\n   }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Dashboard\r\n          </Typography>\r\n          {renderContent()}\r\n         <Box paddingLeft ={5}><a href=\"/api/logout\"><span className=\"white-text text-darken-2\">Logout</span></a></Box>\r\n        </Toolbar>\r\n        \r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n           <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List> \r\n            <div>\r\n                <ListItem button onClick={e=>setTabs(\"home\")} >\r\n                <ListItemIcon className={classes.icon}>\r\n                    <DashboardIcon />\r\n                </ListItemIcon>\r\n                <ListItemText disableTypography primary={<Typography style={{color:'#000000'}}>Dashboard</Typography>}/>\r\n                </ListItem>\r\n                <ListItem button onClick={e=>setTabs(\"maps\")}>\r\n                <ListItemIcon className={classes.icon}>\r\n                    <InfoIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Maps\" />\r\n                </ListItem>\r\n                <ListItem button>\r\n                <ListItemIcon className={classes.icon}>\r\n                    <ContactPhoneIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Contact Us\" />\r\n                </ListItem>\r\n            </div>\r\n  </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n            {loadTabs()}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {auth: state.auth };\r\n}\r\nexport default connect(mapStateToProps)(Dashboard);","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\listItems.js",["128","129"],"import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ContactPhoneIcon from '@material-ui/icons/ContactPhone';\r\nimport {Link} from 'react-router-dom';\r\nimport login from './Login';\r\nimport setTabs from './NewDashboard';\r\n\r\nexport const mainListItems = (\r\n  <div>\r\n    <ListItem button onClick={e=>setTabs(\"home\")} >\r\n      <ListItemIcon>\r\n        <DashboardIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Dashboard\" />\r\n    </ListItem>\r\n    <ListItem button onClick={e=>setTabs(\"home\")}>\r\n      <ListItemIcon>\r\n        <InfoIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"About Us\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <ContactPhoneIcon/>\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Contact Us\" />\r\n    </ListItem>\r\n  </div>\r\n);",["130","131"],"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\styles.js",[],"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\Aboutus.js",[],"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\Homepage.js",["132"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport useStyles from './styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport DeviceInfo from './DeviceInfo';\r\nimport OnlineCount from './OnlineCount';\r\nimport { makeStyles} from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport OfflineCount from './OfflineCount';\r\nimport TotalCount from './TotalCount';\r\nimport ClickableTable from './ClickableTable';\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  box: {\r\n    height: '130px',\r\n    width: '100%',\r\n    \r\n  },\r\n  mainBox: {\r\n    marginTop: 5\r\n  }\r\n}));\r\nexport default function Homepage() {\r\n    const classes = useStyles();\r\n    const c = useStyles1();\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n    return(\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={6} >\r\n          <Grid item  xs={2} >\r\n          <Box my={4} r ={5}>\r\n              <Paper className={c.box} elevation={10}>\r\n              <TotalCount />     \r\n              </Paper>\r\n              </Box>\r\n          </Grid>\r\n          <Grid item  xs={2} >\r\n          <Box my={4}>\r\n              <Paper className={c.box} elevation={10}>\r\n              <OnlineCount />     \r\n              </Paper>\r\n              </Box>\r\n          </Grid>\r\n          <Grid item  xs={2} >\r\n          <Box my={4}>\r\n              <Paper className={c.box}elevation={10}>\r\n              <OfflineCount />     \r\n              </Paper>\r\n              </Box>\r\n          </Grid>\r\n      </Grid>\r\n          <Grid container spacing={3}>\r\n        \r\n            <Grid item xs={12} md={8} lg={9}>\r\n                <DeviceInfo />\r\n            </Grid>\r\n            \r\n            <Grid item xs={12} md={8} lg={9}>\r\n              <Paper className={fixedHeightPaper}>\r\n                   \r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n    )\r\n}","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\TableInfo.js",["133","134","135","136","137"],"import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchOnine} from '../actions';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nconst propsT = null;\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n});\r\n  function renderSwitch(row) {\r\n  switch(row) {\r\n    case 'offline':\r\n      return <Typography color=\"error\">{row}</Typography>\r\n    default:\r\n      return <Typography color=\"primary\">{row}</Typography>\r\n  }\r\n}\r\nexport default function CustomPaginationActionsTable(props) {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const rows = props.deviceInfo?props.deviceInfo.map(deviceinfo=>{\r\n    return {devId:deviceinfo.device_id,\r\n      instId:deviceinfo.institution_id,\r\n      cat:deviceinfo.category,\r\n      typeDev:deviceinfo.type,\r\n      status:deviceinfo.status  }\r\n  }):[{devId:\"Loading\",\r\n    instId:\"Loading\",\r\n    cat:\"Loading\",\r\n    typeDev:\"Loading\"}];\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  \r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table stickyHeader className={classes.table} aria-label=\"custom pagination table\">\r\n      <TableHead>\r\n          <TableRow>\r\n            <TableCell align='left'>Device Id</TableCell>\r\n            <TableCell align='left'>Institution Id</TableCell>\r\n            <TableCell align='left'>Category</TableCell>\r\n            <TableCell align='left'>Device Type</TableCell>\r\n            <TableCell align='left'>Status</TableCell>\r\n          </TableRow>\r\n      </TableHead>\r\n        <TableBody>\r\n          {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows\r\n          ).map((row) => (\r\n            <TableRow key={row.devId}>\r\n              <TableCell style={{ width: 160}} align =\"left\">\r\n                {row.devId}\r\n              </TableCell>\r\n              <TableCell style={{ width: 160 }} align=\"left\">\r\n                {row.instId}\r\n              </TableCell>\r\n              <TableCell style={{ width: 160 }} align=\"left\">\r\n                {row.cat}\r\n              </TableCell>\r\n              <TableCell style={{ width: 160 }} align=\"left\">\r\n                {row.typeDev}\r\n              </TableCell>\r\n              <TableCell style={{ width: 160 }} align=\"left\">\r\n              {renderSwitch(row.status)}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          {emptyRows > 0 && (\r\n            <TableRow style={{ height: 53 * emptyRows }}>\r\n              <TableCell colSpan={6} />\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n              colSpan={3}\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true,\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\newtable.js",["138","139","140"],"import React, { useEffect,useState } from 'react';\r\nimport axios from 'axios';\r\nimport {Modal,Button,Tab} from 'react-bootstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport './Tables.css';\r\nimport { fetchDevice } from '../actions';\r\n\r\nexport default function Tables(props) {\r\n    const[DeviceId, setDeviceId] = useState([]);\r\n    const[modalInfo, setModalInfo] = useState([]);\r\n    const[showModal, setShowModal] = useState([false]);\r\n\r\n    const[show, setShow] = useState(false);\r\n    const handleClose = ()=> setShow(false);\r\n    const handleShow = ()=> setShow(true);\r\n\r\n    const getDeviceID = async()=>{\r\n        try{\r\n            const data = await axios.get(\"https://nba-players.herokuapp.com/players-stats\");\r\n            // const data = await axios.get(\"'api/deviceprofiles'\");\r\n            // const data = fetchDevice();\r\n\r\n            setDeviceId(data.data)\r\n        }\r\n        catch (e)\r\n        {\r\n            console.log(e);\r\n        }\r\n\r\n    };\r\n   \r\n    useEffect(()=>{\r\n        getDeviceID(); \r\n    },[]);\r\n\r\n    const columns = [\r\n        // {dataField:\"device_id\",text: \"Device ID\",headerStyle: {textAlign: 'center'}},\r\n        // {dataField:\"status\",text: \"Status\",headerStyle: {textAlign: 'center'}},\r\n        // {dataField:\"type\",text: \"Type\",headerStyle: {textAlign: 'center'}},\r\n        // {dataField:\"category\",text: \"Category\",headerStyle: {textAlign: 'center'}},\r\n\r\n        {dataField:\"device_id\",text: \"Device ID\",headerStyle: {textAlign: 'center'}},\r\n        {dataField:\"institution_id\",text: \"Status\",headerStyle: {textAlign: 'center'}},\r\n        {dataField:\"category\",text: \"Type\",headerStyle: {textAlign: 'center'}},\r\n        {dataField:\"type\",text: \"Category\",headerStyle: {textAlign: 'center'}},\r\n    ];\r\n\r\n    const rowEvents = {\r\n        onClick: (e,row) => {\r\n            console.log(row)\r\n            setModalInfo(row)\r\n            toggleTrueFalse()\r\n        },\r\n        };\r\n\r\n    const toggleTrueFalse = () => {\r\n        setShowModal(handleShow);\r\n    };\r\n    const ModalContent = ()=>{\r\n        return(\r\n            <Modal show = {show} onHide= {handleClose}>\r\n                <Modal.Header closeButton>\r\n                   <Modal.Title> modalInfo.device_id</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                {/* <Tabs className=\"summaryTab\" activeKey={this.state.activeTab} onSelect={this.handleSelect}> */}\r\n                <Tabs className=\"summaryTab\" defaultActiveKey=\"summary\" id=\"uncontrolled-tab-example\" > \r\n    <Tab eventKey=\"summary\" title=\"Summary\">\r\n      <ul> <ol> application version:</ol>\r\n      <ol> Expiration date:</ol>\r\n      <ol> application version:</ol>\r\n      <ol> Expiration date:</ol>\r\n      <ol> application version:</ol>\r\n      <ol> Expiration date:</ol>\r\n      <ol> application version:</ol>\r\n      <ol> Expiration date:</ol>\r\n      <ol> application version:</ol>\r\n      <ol> Expiration date:</ol>\r\n      </ul>\r\n    {/* <Sonnet /> */}\r\n    </Tab>\r\n    <Tab eventKey=\"error\" title=\"Error encountered\">\r\n      <ul> <ol> application version:</ol>\r\n      <ol> Expiration date:</ol>\r\n      </ul>\r\n    {/* <Sonnet /> */}\r\n    </Tab>\r\n    <Tab eventKey=\"history\" title= \"History\">\r\n      <ul> <ol> application version:</ol>\r\n      <ol> Expiration date:</ol>\r\n      </ul>\r\n    {/* <Sonnet /> */}\r\n    </Tab>\r\n    </Tabs>\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant = \"secondary\" onClick = {handleClose}>Close</Button>\r\n                </Modal.Footer>\r\n\r\n            </Modal>\r\n        );\r\n\r\n    };    \r\n    return(\r\n        <div className=\"App\">\r\n            <BootstrapTable striped bordered hover size=\"sm\" ali\r\n            keyField = \"device_id\"\r\n            data= {DeviceId}\r\n            columns = {columns}\r\n            rowEvents ={rowEvents}\r\n            pagination = {paginationFactory()}\r\n            />\r\n            {show? <ModalContent />: null}\r\n        </div>\r\n    );\r\n};","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\reducers\\deviceCountReducer.js",["141"],"import { FETCH_ONLINECOUNT} from '../actions/types';\r\n\r\n\r\nexport default function(state = null, action) {\r\n    console.log(action);\r\n    switch(action.type) {\r\n        //if the action is fetch_user send the payload\r\n        case FETCH_ONLINECOUNT:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\reducers\\deviceOfflineReducer.js",["142"],"import { FETCH_OFFLINECOUNT} from '../actions/types';\r\n\r\n\r\nexport default function(state = null, action) {\r\n    console.log(action);\r\n    switch(action.type) {\r\n        //if the action is fetch_user send the payload\r\n        case FETCH_OFFLINECOUNT:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\OnlineCount.js",[],"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\OfflineCount.js",[],"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\TotalCount.js",[],"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\Maps.js",["143","144","145"],"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\ClickableTable.js",["146","147","148","149"],"import React, { useEffect,useState } from 'react';\r\nimport axios from 'axios';\r\nimport {Modal,Button,Tab} from 'react-bootstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport './ClickableTable.css';\r\nimport { fetchDevice } from '../actions';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n\r\n import Summary from './Summary';\r\n\r\n\r\nfunction ClickableTable(props) \r\n{\r\n\r\n    const [deviceinfo, setDeviceinfo] = useState([]);\r\n\r\n    const[modalInfo, setModalInfo] = useState([]);\r\n    const[showModal, setShowModal] = useState([false]);\r\n\r\n    const[show, setShow] = useState(false);\r\n    const handleClose = ()=> setShow(false);\r\n    const handleShow = ()=> setShow(true);\r\n\r\n\r\n    useEffect(() => {\r\n      // logic for bringing in data object\r\n      setDeviceinfo(props.deviceInfo)\r\n    }, [])\r\n  \r\n    const columns = [\r\n        {\r\n          dataField: 'device_id',\r\n          text: 'Device ID',\r\n          headerStyle: {textAlign: 'center'}\r\n        },\r\n        {\r\n          dataField: 'university_id',\r\n          text: 'University ID',\r\n          headerStyle: {textAlign: 'center'}\r\n        },\r\n        {\r\n          dataField: 'category',\r\n          text: 'Category',\r\n          headerStyle: {textAlign: 'center'}\r\n        },\r\n        {\r\n            dataField: 'type',\r\n            text: 'Type',\r\n            headerStyle: {textAlign: 'center'}\r\n        }\r\n      ];\r\n  \r\n    const datas = deviceinfo.map(infos => (\r\n      {\r\n        device_id: infos.device_id,\r\n        university_id: infos.institution_id,\r\n        category: infos.category,\r\n        type:infos.type,\r\n        error: infos.errorText,\r\n        model: infos.model,\r\n        app_Version: infos.applicationVersion,\r\n        firware_Version: infos.firmwareVersion,\r\n        license_expiry:infos.licenseExpiry,\r\n        license_key: infos.licenseKey,\r\n        manufacturer: infos.manufacturer,\r\n        serial_number: infos.serialNumber,\r\n        status: infos.status,\r\n        status_date_time: infos.statusDateTime,\r\n        id: infos._id\r\n\r\n      }\r\n    ));\r\n  \r\n\r\n\r\n\r\n    const rowEvents = {\r\n        onClick: (e,row) => {\r\n            console.log(row)\r\n            setModalInfo(row)\r\n            toggleTrueFalse()\r\n        },\r\n        };\r\n\r\n    const toggleTrueFalse = () => {\r\n        setShowModal(handleShow);\r\n    };\r\n    const ModalContent = ()=>{\r\n        return(\r\n            <Modal {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered \r\n            show = {show} onHide= {handleClose} backdrop=\"static\"\r\n            keyboard={false}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title \r\n            centered > {modalInfo.device_id}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                <Tabs fill variant=\"tabs\" className=\"summaryTab\" defaultActiveKey=\"summary\" headerStyle={{fontWeight: 'bold'}} activeHeaderStyle={{color: 'white'}} id=\"uncontrolled-tab-example\"  > \r\n  <Tab eventKey=\"summary\" title=\"Summary\">\r\n\r\n     <Summary {...modalInfo}/> \r\n  </Tab>\r\n  <Tab eventKey=\"error\" title=\"Error encountered\">\r\n  <ListGroup>\r\n  <ListGroup.Item>Error1 </ListGroup.Item>\r\n  <ListGroup.Item> Error2 </ListGroup.Item>\r\n  </ListGroup>\r\n    {/* <Errors /> */}\r\n  </Tab>\r\n  <Tab eventKey=\"history\" title= \"History\">\r\n  <ListGroup>\r\n  <ListGroup.Item>History1 </ListGroup.Item>\r\n  <ListGroup.Item> History2 </ListGroup.Item>\r\n  </ListGroup>\r\n    {/* <History /> */}\r\n  </Tab>\r\n</Tabs>\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant = \"secondary\" onClick = {handleClose}>Close</Button>\r\n                </Modal.Footer>\r\n\r\n            </Modal>\r\n        );\r\n\r\n    };    \r\n\r\n\r\n\r\n\r\n    return (\r\n        console.log(props),\r\n        <div className=\"App\">\r\n      <BootstrapTable\r\n        striped bordered hover size=\"sm\" ali\r\n        keyField=\"id\"\r\n        data={datas}\r\n        columns={columns}\r\n        rowEvents ={rowEvents}\r\n            pagination = {paginationFactory()}\r\n            />\r\n            {show? <ModalContent />: null}\r\n            </div>\r\n    );\r\n\r\n}\r\nexport default ClickableTable;","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\Summary.js",[],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":4,"column":1,"nodeType":"156","endLine":13,"endColumn":2},{"ruleId":"154","severity":1,"message":"155","line":4,"column":1,"nodeType":"156","endLine":13,"endColumn":2},{"ruleId":"157","severity":1,"message":"158","line":5,"column":8,"nodeType":"159","messageId":"160","endLine":5,"endColumn":16},{"ruleId":"157","severity":1,"message":"161","line":1,"column":16,"nodeType":"159","messageId":"160","endLine":1,"endColumn":25},{"ruleId":"157","severity":1,"message":"162","line":23,"column":8,"nodeType":"159","messageId":"160","endLine":23,"endColumn":15},{"ruleId":"157","severity":1,"message":"163","line":25,"column":8,"nodeType":"159","messageId":"160","endLine":25,"endColumn":17},{"ruleId":"157","severity":1,"message":"164","line":27,"column":8,"nodeType":"159","messageId":"160","endLine":27,"endColumn":22},{"ruleId":"157","severity":1,"message":"165","line":8,"column":9,"nodeType":"159","messageId":"160","endLine":8,"endColumn":13},{"ruleId":"157","severity":1,"message":"166","line":9,"column":8,"nodeType":"159","messageId":"160","endLine":9,"endColumn":13},{"ruleId":"150","replacedBy":"167"},{"ruleId":"152","replacedBy":"168"},{"ruleId":"157","severity":1,"message":"164","line":13,"column":8,"nodeType":"159","messageId":"160","endLine":13,"endColumn":22},{"ruleId":"157","severity":1,"message":"169","line":1,"column":16,"nodeType":"159","messageId":"160","endLine":1,"endColumn":25},{"ruleId":"157","severity":1,"message":"170","line":2,"column":9,"nodeType":"159","messageId":"160","endLine":2,"endColumn":16},{"ruleId":"157","severity":1,"message":"171","line":3,"column":9,"nodeType":"159","messageId":"160","endLine":3,"endColumn":19},{"ruleId":"157","severity":1,"message":"172","line":20,"column":10,"nodeType":"159","messageId":"160","endLine":20,"endColumn":21},{"ruleId":"157","severity":1,"message":"173","line":30,"column":7,"nodeType":"159","messageId":"160","endLine":30,"endColumn":13},{"ruleId":"157","severity":1,"message":"174","line":8,"column":10,"nodeType":"159","messageId":"160","endLine":8,"endColumn":21},{"ruleId":"157","severity":1,"message":"175","line":12,"column":11,"nodeType":"159","messageId":"160","endLine":12,"endColumn":20},{"ruleId":"157","severity":1,"message":"176","line":13,"column":11,"nodeType":"159","messageId":"160","endLine":13,"endColumn":20},{"ruleId":"154","severity":1,"message":"155","line":4,"column":1,"nodeType":"156","endLine":13,"endColumn":2},{"ruleId":"154","severity":1,"message":"155","line":4,"column":1,"nodeType":"156","endLine":13,"endColumn":2},{"ruleId":"177","severity":1,"message":"178","line":51,"column":78,"nodeType":"179","messageId":"180","endLine":51,"endColumn":79},{"ruleId":"157","severity":1,"message":"181","line":68,"column":11,"nodeType":"159","messageId":"160","endLine":68,"endColumn":22},{"ruleId":"157","severity":1,"message":"182","line":69,"column":11,"nodeType":"159","messageId":"160","endLine":69,"endColumn":20},{"ruleId":"157","severity":1,"message":"183","line":2,"column":8,"nodeType":"159","messageId":"160","endLine":2,"endColumn":13},{"ruleId":"157","severity":1,"message":"174","line":8,"column":10,"nodeType":"159","messageId":"160","endLine":8,"endColumn":21},{"ruleId":"157","severity":1,"message":"176","line":20,"column":11,"nodeType":"159","messageId":"160","endLine":20,"endColumn":20},{"ruleId":"184","severity":1,"message":"185","line":30,"column":8,"nodeType":"186","endLine":30,"endColumn":10,"suggestions":"187"},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'NewTable' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Aboutus' is defined but never used.","'TableInfo' is defined but never used.","'ClickableTable' is defined but never used.","'Link' is defined but never used.","'login' is defined but never used.",["188"],["189"],"'Component' is defined but never used.","'connect' is defined but never used.","'fetchOnine' is defined but never used.","'useDispatch' is defined but never used.","'propsT' is assigned a value but never used.","'fetchDevice' is defined but never used.","'modalInfo' is assigned a value but never used.","'showModal' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'greenMarker' is assigned a value but never used.","'redMarker' is assigned a value but never used.","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.deviceInfo'. Either include it or remove the dependency array. If 'setDeviceinfo' needs the current value of 'props.deviceInfo', you can also switch to useReducer instead of useState and read 'props.deviceInfo' in the reducer.","ArrayExpression",["190"],"no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},"Update the dependencies array to be: [props.deviceInfo]",{"range":"193","text":"194"},[923,925],"[props.deviceInfo]"]