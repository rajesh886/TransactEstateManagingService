[{"C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\index.js":"1","C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\components\\App.js":"3","C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\reducers\\index.js":"4","C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\components\\Header.js":"5","C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\components\\Login.js":"6","C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\components\\NewDashboard.js":"7","C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\reducers\\deviceReducer.js":"8","C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\reducers\\authReducer.js":"9","C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\actions\\index.js":"10","C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\components\\TableInfo.js":"11","C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\components\\styles.js":"12","C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\components\\Homepage.js":"13","C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\components\\Aboutus.js":"14","C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\actions\\types.js":"15","C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\components\\DeviceInfo.js":"16","C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\components\\ClickableTable.js":"17","C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\components\\Summary.js":"18"},{"size":1176,"mtime":1615482621727,"results":"19","hashOfConfig":"20"},{"size":375,"mtime":1615353934027,"results":"21","hashOfConfig":"20"},{"size":878,"mtime":1615353934018,"results":"22","hashOfConfig":"20"},{"size":222,"mtime":1615353934026,"results":"23","hashOfConfig":"20"},{"size":936,"mtime":1615354048049,"results":"24","hashOfConfig":"20"},{"size":4345,"mtime":1615353934021,"results":"25","hashOfConfig":"20"},{"size":4448,"mtime":1615354048049,"results":"26","hashOfConfig":"20"},{"size":326,"mtime":1615354048052,"results":"27","hashOfConfig":"20"},{"size":333,"mtime":1615354048051,"results":"28","hashOfConfig":"20"},{"size":636,"mtime":1615354048048,"results":"29","hashOfConfig":"20"},{"size":6267,"mtime":1615353934022,"results":"30","hashOfConfig":"20"},{"size":2272,"mtime":1615353934023,"results":"31","hashOfConfig":"20"},{"size":868,"mtime":1615353934020,"results":"32","hashOfConfig":"20"},{"size":785,"mtime":1615353934017,"results":"33","hashOfConfig":"20"},{"size":84,"mtime":1615353934017,"results":"34","hashOfConfig":"20"},{"size":1693,"mtime":1615484767173,"results":"35","hashOfConfig":"20"},{"size":4276,"mtime":1615506313531,"results":"36","hashOfConfig":"20"},{"size":984,"mtime":1615506276810,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"gsldnw",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\index.js",["79","80"],"C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\reportWebVitals.js",[],["81","82"],"C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\components\\App.js",[],"C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\reducers\\index.js",[],"C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\components\\Header.js",[],"C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\components\\Login.js",[],"C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\components\\NewDashboard.js",["83","84"],"import React, {useEffect} from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\n\r\nimport useStyles from './styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ContactPhoneIcon from '@material-ui/icons/ContactPhone';\r\nimport { connect } from 'react-redux';\r\nimport Aboutus from './Aboutus';\r\nimport Homepage from './Homepage';\r\nimport TableInfo from './TableInfo';\r\n \r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction Dashboard(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const [tabs, setTabs] = React.useState('home');\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const loadTabs = () => {\r\n\r\n    switch(tabs) {\r\n        case 'home':\r\n            return <Homepage />\r\n        case 'aboutus':\r\n            return <TableInfo {...props} />\r\n        default:\r\n            break;\r\n    }\r\n  }\r\n\r\n   const   renderContent =() => {\r\n  \r\n     switch(props.auth) {\r\n      case null:\r\n        return <a href=\"/api/auth\">Login with Azure</a>;\r\n       default:\r\n        return <a href=\"/#\"><span className=\"white-text text-darken-2\">Admin: {props.auth.given_name} </span></a>\r\n    }\r\n   }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Dashboard\r\n          </Typography>\r\n          {renderContent()}\r\n         <Box paddingLeft ={5}><a href=\"/api/logout\"><span className=\"white-text text-darken-2\">Logout</span></a></Box>\r\n        </Toolbar>\r\n        \r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n           <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List> \r\n            <div>\r\n                <ListItem button onClick={e=>setTabs(\"home\")} >\r\n                <ListItemIcon className={classes.icon}>\r\n                    <DashboardIcon />\r\n                </ListItemIcon>\r\n                <ListItemText disableTypography primary={<Typography style={{color:'#000000'}}>Dashboard</Typography>}/>\r\n                </ListItem>\r\n                <ListItem button onClick={e=>setTabs(\"aboutus\")}>\r\n                <ListItemIcon className={classes.icon}>\r\n                    <InfoIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"About Us\" />\r\n                </ListItem>\r\n                <ListItem button>\r\n                <ListItemIcon className={classes.icon}>\r\n                    <ContactPhoneIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Contact Us\" />\r\n                </ListItem>\r\n            </div>\r\n  </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n            {loadTabs()}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {auth: state.auth };\r\n}\r\nexport default connect(mapStateToProps)(Dashboard);","C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\reducers\\deviceReducer.js",["85"],"import { FETCH_DEVICE} from '../actions/types';\r\n\r\n\r\nexport default function(state = [], action) {\r\n    console.log(action);\r\n    switch(action.type) {\r\n        //if the action is fetch_user send the payload\r\n        case FETCH_DEVICE:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\reducers\\authReducer.js",["86"],"import { FETCH_USER} from '../actions/types';\r\n\r\n\r\nexport default function(state = null, action) {\r\n    console.log(action);\r\n    switch(action.type) {\r\n        //if the action is fetch_user send the payload\r\n        case FETCH_USER:\r\n            return action.payload || false;\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\actions\\index.js",[],"C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\components\\TableInfo.js",["87","88","89","90","91"],"import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchOnine} from '../actions';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nconst propsT = null;\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n});\r\n\r\nexport default function CustomPaginationActionsTable(props) {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const rows = props.deviceInfo?props.deviceInfo.map(deviceinfo=>{\r\n    return {devId:deviceinfo.device_id,\r\n      instId:deviceinfo.institution_id,\r\n      cat:deviceinfo.category,\r\n      typeDev:deviceinfo.type,\r\n      status:deviceinfo.status  }\r\n  }):[{devId:\"Loading\",\r\n    instId:\"Loading\",\r\n    cat:\"Loading\",\r\n    typeDev:\"Loading\"}];\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table stickyHeader className={classes.table} aria-label=\"custom pagination table\">\r\n      <TableHead>\r\n          <TableRow>\r\n            <TableCell align='left'>Device Id</TableCell>\r\n            <TableCell align='left'>Institution Id</TableCell>\r\n            <TableCell align='left'>Category</TableCell>\r\n            <TableCell align='left'>Device Type</TableCell>\r\n            <TableCell align='left'>Status</TableCell>\r\n          </TableRow>\r\n      </TableHead>\r\n        <TableBody>\r\n          {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows\r\n          ).map((row) => (\r\n            <TableRow key={row.devId}>\r\n              <TableCell style={{ width: 160}} align =\"left\">\r\n                {row.devId}\r\n              </TableCell>\r\n              <TableCell style={{ width: 160 }} align=\"left\">\r\n                {row.instId}\r\n              </TableCell>\r\n              <TableCell style={{ width: 160 }} align=\"left\">\r\n                {row.cat}\r\n              </TableCell>\r\n              <TableCell style={{ width: 160 }} align=\"left\">\r\n                {row.typeDev}\r\n              </TableCell>\r\n              <TableCell style={{ width: 160 }} align=\"left\">\r\n                {row.status}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          {emptyRows > 0 && (\r\n            <TableRow style={{ height: 53 * emptyRows }}>\r\n              <TableCell colSpan={6} />\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n              colSpan={3}\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true,\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\components\\styles.js",[],"C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\components\\Homepage.js",[],"C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\components\\Aboutus.js",[],"C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\actions\\types.js",[],"C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\components\\DeviceInfo.js",["92"],"C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\components\\ClickableTable.js",["93","94","95","96"],"C:\\Users\\Swastee\\Documents\\transact\\TransactEstateManagingService\\client\\src\\components\\Summary.js",["97"],{"ruleId":"98","severity":1,"message":"99","line":15,"column":8,"nodeType":"100","messageId":"101","endLine":15,"endColumn":9},{"ruleId":"98","severity":1,"message":"102","line":16,"column":8,"nodeType":"100","messageId":"101","endLine":16,"endColumn":14},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"98","severity":1,"message":"107","line":1,"column":16,"nodeType":"100","messageId":"101","endLine":1,"endColumn":25},{"ruleId":"98","severity":1,"message":"108","line":23,"column":8,"nodeType":"100","messageId":"101","endLine":23,"endColumn":15},{"ruleId":"109","severity":1,"message":"110","line":4,"column":1,"nodeType":"111","endLine":13,"endColumn":2},{"ruleId":"109","severity":1,"message":"110","line":4,"column":1,"nodeType":"111","endLine":13,"endColumn":2},{"ruleId":"98","severity":1,"message":"112","line":1,"column":16,"nodeType":"100","messageId":"101","endLine":1,"endColumn":25},{"ruleId":"98","severity":1,"message":"113","line":2,"column":9,"nodeType":"100","messageId":"101","endLine":2,"endColumn":16},{"ruleId":"98","severity":1,"message":"114","line":3,"column":9,"nodeType":"100","messageId":"101","endLine":3,"endColumn":19},{"ruleId":"98","severity":1,"message":"115","line":20,"column":10,"nodeType":"100","messageId":"101","endLine":20,"endColumn":21},{"ruleId":"98","severity":1,"message":"116","line":29,"column":7,"nodeType":"100","messageId":"101","endLine":29,"endColumn":13},{"ruleId":"98","severity":1,"message":"117","line":4,"column":8,"nodeType":"100","messageId":"101","endLine":4,"endColumn":17},{"ruleId":"98","severity":1,"message":"118","line":2,"column":8,"nodeType":"100","messageId":"101","endLine":2,"endColumn":13},{"ruleId":"98","severity":1,"message":"119","line":8,"column":10,"nodeType":"100","messageId":"101","endLine":8,"endColumn":21},{"ruleId":"98","severity":1,"message":"120","line":20,"column":11,"nodeType":"100","messageId":"101","endLine":20,"endColumn":20},{"ruleId":"121","severity":1,"message":"122","line":30,"column":8,"nodeType":"123","endLine":30,"endColumn":10,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":13,"column":42,"nodeType":"127","messageId":"128","endLine":13,"endColumn":67,"fix":"129"},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-native-reassign",["130"],"no-negated-in-lhs",["131"],"'useEffect' is defined but never used.","'Aboutus' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Component' is defined but never used.","'connect' is defined but never used.","'fetchOnine' is defined but never used.","'useDispatch' is defined but never used.","'propsT' is assigned a value but never used.","'TableInfo' is defined but never used.","'axios' is defined but never used.","'fetchDevice' is defined but never used.","'showModal' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.deviceInfo'. Either include it or remove the dependency array. If 'setDeviceinfo' needs the current value of 'props.deviceInfo', you can also switch to useReducer instead of useState and read 'props.deviceInfo' in the reducer.","ArrayExpression",["132"],"no-whitespace-before-property","Unexpected whitespace before property license_expiry.","MemberExpression","unexpectedWhitespace",{"range":"133","text":"134"},"no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},[684,686],".","Update the dependencies array to be: [props.deviceInfo]",{"range":"137","text":"138"},[923,925],"[props.deviceInfo]"]