[{"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\index.js":"1","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\App.js":"3","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\reducers\\index.js":"4","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\Header.js":"5","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\Dashboard.js":"6","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\reducers\\authReducer.js":"7","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\actions\\index.js":"8","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\actions\\types.js":"9","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\reducers\\deviceReducer.js":"10","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\DeviceInfo.js":"11","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\Login.js":"12","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\NewDashboard.js":"13","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\listItems.js":"14","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\styles.js":"15","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\Aboutus.js":"16","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\Homepage.js":"17","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\TableInfo.js":"18"},{"size":858,"mtime":1613798818364,"results":"19","hashOfConfig":"20"},{"size":375,"mtime":1612918902217,"results":"21","hashOfConfig":"20"},{"size":878,"mtime":1614030368360,"results":"22","hashOfConfig":"20"},{"size":222,"mtime":1612939236775,"results":"23","hashOfConfig":"20"},{"size":936,"mtime":1613672362722,"results":"24","hashOfConfig":"20"},{"size":707,"mtime":1613965291683,"results":"25","hashOfConfig":"20"},{"size":333,"mtime":1612933899690,"results":"26","hashOfConfig":"20"},{"size":636,"mtime":1613674194897,"results":"27","hashOfConfig":"20"},{"size":84,"mtime":1612938919053,"results":"28","hashOfConfig":"20"},{"size":326,"mtime":1612939168562,"results":"29","hashOfConfig":"20"},{"size":1640,"mtime":1614745181623,"results":"30","hashOfConfig":"20"},{"size":4345,"mtime":1613511660232,"results":"31","hashOfConfig":"20"},{"size":4448,"mtime":1614719470378,"results":"32","hashOfConfig":"20"},{"size":1061,"mtime":1614033558019,"results":"33","hashOfConfig":"20"},{"size":2272,"mtime":1614041174347,"results":"34","hashOfConfig":"20"},{"size":785,"mtime":1614031585810,"results":"35","hashOfConfig":"20"},{"size":868,"mtime":1614722402959,"results":"36","hashOfConfig":"20"},{"size":6267,"mtime":1614745185477,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"6lkmm8",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\index.js",[],["81","82"],"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\App.js",[],"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\reducers\\index.js",[],"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\Header.js",[],"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\Dashboard.js",[],"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\reducers\\authReducer.js",["83"],"import { FETCH_USER} from '../actions/types';\r\n\r\n\r\nexport default function(state = null, action) {\r\n    console.log(action);\r\n    switch(action.type) {\r\n        //if the action is fetch_user send the payload\r\n        case FETCH_USER:\r\n            return action.payload || false;\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\actions\\index.js",[],"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\actions\\types.js",[],"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\reducers\\deviceReducer.js",["84"],"import { FETCH_DEVICE} from '../actions/types';\r\n\r\n\r\nexport default function(state = [], action) {\r\n    console.log(action);\r\n    switch(action.type) {\r\n        //if the action is fetch_user send the payload\r\n        case FETCH_DEVICE:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\DeviceInfo.js",[],"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\Login.js",[],"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\NewDashboard.js",["85","86"],"import React, {useEffect} from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\n\r\nimport useStyles from './styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ContactPhoneIcon from '@material-ui/icons/ContactPhone';\r\nimport { connect } from 'react-redux';\r\nimport Aboutus from './Aboutus';\r\nimport Homepage from './Homepage';\r\nimport TableInfo from './TableInfo';\r\n \r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction Dashboard(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const [tabs, setTabs] = React.useState('home');\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const loadTabs = () => {\r\n\r\n    switch(tabs) {\r\n        case 'home':\r\n            return <Homepage />\r\n        case 'aboutus':\r\n            return <TableInfo {...props} />\r\n        default:\r\n            break;\r\n    }\r\n  }\r\n\r\n   const   renderContent =() => {\r\n  \r\n     switch(props.auth) {\r\n      case null:\r\n        return <a href=\"/api/auth\">Login with Azure</a>;\r\n       default:\r\n        return <a href=\"/#\"><span className=\"white-text text-darken-2\">Admin: {props.auth.given_name} </span></a>\r\n    }\r\n   }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Dashboard\r\n          </Typography>\r\n          {renderContent()}\r\n         <Box paddingLeft ={5}><a href=\"/api/logout\"><span className=\"white-text text-darken-2\">Logout</span></a></Box>\r\n        </Toolbar>\r\n        \r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n           <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List> \r\n            <div>\r\n                <ListItem button onClick={e=>setTabs(\"home\")} >\r\n                <ListItemIcon className={classes.icon}>\r\n                    <DashboardIcon />\r\n                </ListItemIcon>\r\n                <ListItemText disableTypography primary={<Typography style={{color:'#000000'}}>Dashboard</Typography>}/>\r\n                </ListItem>\r\n                <ListItem button onClick={e=>setTabs(\"aboutus\")}>\r\n                <ListItemIcon className={classes.icon}>\r\n                    <InfoIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"About Us\" />\r\n                </ListItem>\r\n                <ListItem button>\r\n                <ListItemIcon className={classes.icon}>\r\n                    <ContactPhoneIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Contact Us\" />\r\n                </ListItem>\r\n            </div>\r\n  </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n            {loadTabs()}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {auth: state.auth };\r\n}\r\nexport default connect(mapStateToProps)(Dashboard);","C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\listItems.js",["87","88"],"import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ContactPhoneIcon from '@material-ui/icons/ContactPhone';\r\nimport {Link} from 'react-router-dom';\r\nimport login from './Login';\r\nimport setTabs from './NewDashboard';\r\n\r\nexport const mainListItems = (\r\n  <div>\r\n    <ListItem button onClick={e=>setTabs(\"home\")} >\r\n      <ListItemIcon>\r\n        <DashboardIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Dashboard\" />\r\n    </ListItem>\r\n    <ListItem button onClick={e=>setTabs(\"home\")}>\r\n      <ListItemIcon>\r\n        <InfoIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"About Us\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <ContactPhoneIcon/>\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Contact Us\" />\r\n    </ListItem>\r\n  </div>\r\n);",["89","90"],"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\styles.js",[],"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\Aboutus.js",[],"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\Homepage.js",[],"C:\\Users\\Prabishan\\Desktop\\TransactEstateManagingService\\TransactEstateManagingService\\client\\src\\components\\TableInfo.js",["91","92","93","94","95"],"import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchOnine} from '../actions';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nconst propsT = null;\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n});\r\n\r\nexport default function CustomPaginationActionsTable(props) {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const rows = props.deviceInfo?props.deviceInfo.map(deviceinfo=>{\r\n    return {devId:deviceinfo.device_id,\r\n      instId:deviceinfo.institution_id,\r\n      cat:deviceinfo.category,\r\n      typeDev:deviceinfo.type,\r\n      status:deviceinfo.status  }\r\n  }):[{devId:\"Loading\",\r\n    instId:\"Loading\",\r\n    cat:\"Loading\",\r\n    typeDev:\"Loading\"}];\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table stickyHeader className={classes.table} aria-label=\"custom pagination table\">\r\n      <TableHead>\r\n          <TableRow>\r\n            <TableCell align='left'>Device Id</TableCell>\r\n            <TableCell align='left'>Institution Id</TableCell>\r\n            <TableCell align='left'>Category</TableCell>\r\n            <TableCell align='left'>Device Type</TableCell>\r\n            <TableCell align='left'>Status</TableCell>\r\n          </TableRow>\r\n      </TableHead>\r\n        <TableBody>\r\n          {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows\r\n          ).map((row) => (\r\n            <TableRow key={row.devId}>\r\n              <TableCell style={{ width: 160}} align =\"left\">\r\n                {row.devId}\r\n              </TableCell>\r\n              <TableCell style={{ width: 160 }} align=\"left\">\r\n                {row.instId}\r\n              </TableCell>\r\n              <TableCell style={{ width: 160 }} align=\"left\">\r\n                {row.cat}\r\n              </TableCell>\r\n              <TableCell style={{ width: 160 }} align=\"left\">\r\n                {row.typeDev}\r\n              </TableCell>\r\n              <TableCell style={{ width: 160 }} align=\"left\">\r\n                {row.status}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          {emptyRows > 0 && (\r\n            <TableRow style={{ height: 53 * emptyRows }}>\r\n              <TableCell colSpan={6} />\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n              colSpan={3}\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true,\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}",{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":4,"column":1,"nodeType":"102","endLine":13,"endColumn":2},{"ruleId":"100","severity":1,"message":"101","line":4,"column":1,"nodeType":"102","endLine":13,"endColumn":2},{"ruleId":"103","severity":1,"message":"104","line":1,"column":16,"nodeType":"105","messageId":"106","endLine":1,"endColumn":25},{"ruleId":"103","severity":1,"message":"107","line":23,"column":8,"nodeType":"105","messageId":"106","endLine":23,"endColumn":15},{"ruleId":"103","severity":1,"message":"108","line":8,"column":9,"nodeType":"105","messageId":"106","endLine":8,"endColumn":13},{"ruleId":"103","severity":1,"message":"109","line":9,"column":8,"nodeType":"105","messageId":"106","endLine":9,"endColumn":13},{"ruleId":"96","replacedBy":"110"},{"ruleId":"98","replacedBy":"111"},{"ruleId":"103","severity":1,"message":"112","line":1,"column":16,"nodeType":"105","messageId":"106","endLine":1,"endColumn":25},{"ruleId":"103","severity":1,"message":"113","line":2,"column":9,"nodeType":"105","messageId":"106","endLine":2,"endColumn":16},{"ruleId":"103","severity":1,"message":"114","line":3,"column":9,"nodeType":"105","messageId":"106","endLine":3,"endColumn":19},{"ruleId":"103","severity":1,"message":"115","line":20,"column":10,"nodeType":"105","messageId":"106","endLine":20,"endColumn":21},{"ruleId":"103","severity":1,"message":"116","line":29,"column":7,"nodeType":"105","messageId":"106","endLine":29,"endColumn":13},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Aboutus' is defined but never used.","'Link' is defined but never used.","'login' is defined but never used.",["117"],["118"],"'Component' is defined but never used.","'connect' is defined but never used.","'fetchOnine' is defined but never used.","'useDispatch' is defined but never used.","'propsT' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]