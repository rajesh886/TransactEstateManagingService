[{"C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\index.js":"1","C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\components\\App.js":"3","C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\reducers\\index.js":"4","C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\components\\Header.js":"5","C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\components\\Login.js":"6","C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\components\\Homepage.js":"7","C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\components\\NewDashboard.js":"8","C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\components\\Aboutus.js":"9","C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\reducers\\authReducer.js":"10","C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\reducers\\deviceReducer.js":"11","C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\actions\\index.js":"12","C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\components\\styles.js":"13","C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\components\\DeviceInfo.js":"14","C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\components\\TableInfo.js":"15","C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\actions\\types.js":"16","C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\components\\ClickableTable.js":"17","C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\components\\Summary.js":"18"},{"size":1176,"mtime":1619406529648,"results":"19","hashOfConfig":"20"},{"size":375,"mtime":1619240079574,"results":"21","hashOfConfig":"20"},{"size":878,"mtime":1619406529615,"results":"22","hashOfConfig":"20"},{"size":222,"mtime":1619240079574,"results":"23","hashOfConfig":"20"},{"size":936,"mtime":1619406529634,"results":"24","hashOfConfig":"20"},{"size":4345,"mtime":1619406529645,"results":"25","hashOfConfig":"20"},{"size":868,"mtime":1619406529644,"results":"26","hashOfConfig":"20"},{"size":4448,"mtime":1619406529647,"results":"27","hashOfConfig":"20"},{"size":785,"mtime":1619240079543,"results":"28","hashOfConfig":"20"},{"size":333,"mtime":1619406529650,"results":"29","hashOfConfig":"20"},{"size":326,"mtime":1619406529651,"results":"30","hashOfConfig":"20"},{"size":636,"mtime":1619406529613,"results":"31","hashOfConfig":"20"},{"size":2272,"mtime":1619240079574,"results":"32","hashOfConfig":"20"},{"size":1693,"mtime":1619406529619,"results":"33","hashOfConfig":"20"},{"size":6267,"mtime":1619240079559,"results":"34","hashOfConfig":"20"},{"size":84,"mtime":1619406529614,"results":"35","hashOfConfig":"20"},{"size":4276,"mtime":1619406529618,"results":"36","hashOfConfig":"20"},{"size":984,"mtime":1619406529648,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1l7avbt",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},"C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\index.js",["85","86"],"C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\reportWebVitals.js",[],["87","88"],"C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\components\\App.js",["89","90","91","92","93","94"],"import React, { Fragment, Component } from 'react';\r\nimport { BrowserRouter, Switch, Route, Link, Redirect } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport Login from './Login';\r\nimport Homepage from './Homepage';\r\nimport Dashboard from './NewDashboard';\r\nimport Maps from './Maps';\r\nimport Navbar from './Navbar/Navbar';\r\nimport Aboutus from './Aboutus';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\nimport PrivateRoute from '../components/Routing/PrivateRoute';\r\n//Redux \r\nimport { Provider } from 'react-redux';\r\nimport store from '../store';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchUser();\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      // <Provider store={store}>\r\n      <BrowserRouter>\r\n        <Fragment>\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Login} />\r\n            <PrivateRoute exact path=\"/dashboard\" component={Homepage} />\r\n            <PrivateRoute exact path=\"/devicelocations\" component={Maps} />\r\n            <Route exact path=\"/aboutus\" component={Aboutus} />\r\n          </Switch>\r\n        </Fragment>\r\n      </BrowserRouter>\r\n      // </Provider>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { auth: state.auth };\r\n}\r\n\r\n//connect function helps connect react and redux\r\nexport default connect(mapStateToProps, actions)(App);\r\n\r\n","C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\reducers\\index.js",[],"C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\components\\Header.js",[],"C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\components\\Login.js",["95"],"import React, { Component } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(./images/loginPic.png)',\r\n    backgroundRepeat: 'no-repeat',\r\n    // backgroundColor:\r\n    // theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    //backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    //backgroundColor: '#D50032',\r\n  },\r\n  button: {\r\n    //backgroundColor: '#D50032',\r\n    display: 'flex'\r\n  }\r\n});\r\n\r\n\r\nclass Login extends Component {\r\n\r\n  render() {\r\n    if (this.props.auth.user) {\r\n      return <Redirect to=\"/dashboard\" />\r\n    }\r\n    const { classes } = this.props;\r\n    return (\r\n      <Grid container component=\"main\" className={classes.root}>\r\n        <CssBaseline />\r\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign in\r\n                </Typography>\r\n            <form className={classes.form} noValidate>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Remember me\"\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.submit}\r\n              >\r\n                Sign In\r\n                    </Button>\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <Link href=\"#\" variant=\"body2\">\r\n                    Forgot password?\r\n                        </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link href=\"#\" variant=\"body2\">\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n              <Box mt={5}>\r\n\r\n              </Box>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.prototypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return { auth: state.auth };\r\n}\r\n\r\nexport default connect(mapStateToProps)(withStyles(useStyles)(Login));","C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\components\\Homepage.js",["96","97","98","99","100","101","102","103","104","105","106"],"import React, { Fragment, Component, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport useStyles from './styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport DeviceInfo from './DeviceInfo';\r\nimport Chart from './Chart';\r\nimport PropTypes from 'prop-types';\r\nimport { fetchCategory } from '../actions'\r\nimport { connect } from 'react-redux';\r\nimport Analytic from './Analytic';\r\nimport OnlineCount from './OnlineCount';\r\nimport OfflineCount from './OfflineCount';\r\nimport TotalCount from './TotalCount';\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  box: {\r\n    height: '130px',\r\n    width: '100%',\r\n\r\n  },\r\n  mainBox: {\r\n    marginTop: 5\r\n  }\r\n}));\r\n\r\nconst Homepage = () => {\r\n  const classes = useStyles();\r\n  const c = useStyles1();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <Container maxWidth=\"lg\" className={classes.container}>\r\n        <Grid container spacing={6} >\r\n          <Grid item item xs={6} md={5} lg={4} >\r\n            <Box my={4} r={5}>\r\n              <Paper className={c.box} elevation={10}>\r\n                <TotalCount />\r\n              </Paper>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item item xs={6} md={5} lg={4} >\r\n            <Box my={4}>\r\n              <Paper className={c.box} elevation={10}>\r\n                <OnlineCount />\r\n              </Paper>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item item xs={6} md={5} lg={4} >\r\n            <Box my={4}>\r\n              <Paper className={c.box} elevation={10}>\r\n                <OfflineCount />\r\n              </Paper>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n\r\n\r\n      </Container>\r\n\r\n      <Container maxWidth=\"lg\" className={classes.container}>\r\n\r\n\r\n        <Grid item xs={12} >\r\n          <Analytic />\r\n        </Grid>\r\n\r\n\r\n\r\n\r\n      </Container>\r\n\r\n\r\n      <Container maxWidth=\"lg\" className={classes.container}>\r\n        <Grid container spacing={3}>\r\n\r\n          <Grid item xs={12} md={8} lg={9}>\r\n            <DeviceInfo />\r\n          </Grid>\r\n\r\n\r\n        </Grid>\r\n\r\n      </Container>\r\n\r\n\r\n\r\n\r\n\r\n    </Fragment>\r\n\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Homepage;","C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\components\\NewDashboard.js",["107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131"],"import React, { useEffect } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\n\r\nimport useStyles from './styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ContactPhoneIcon from '@material-ui/icons/ContactPhone';\r\nimport { connect } from 'react-redux';\r\nimport Aboutus from './Aboutus';\r\nimport Homepage from './Homepage';\r\nimport TableInfo from './TableInfo';\r\nimport Maps from './Maps';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction Dashboard(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const [tabs, setTabs] = React.useState('home');\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const loadTabs = () => {\r\n\r\n    switch (tabs) {\r\n      case 'home':\r\n        return <Homepage />\r\n      case 'aboutus':\r\n        return <Maps />\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  const renderContent = () => {\r\n\r\n    switch (props.auth) {\r\n      case null:\r\n        return <a href=\"/api/auth\">Login with Azure</a>;\r\n      default:\r\n        return <a href=\"/dashboard\"><span className=\"white-text text-darken-2\">Admin: {props.auth.given_name} </span></a>\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      {/* <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Dashboard\r\n          </Typography>\r\n          {renderContent()}\r\n          <Box paddingLeft={5}><a href=\"/api/auth/logout\"><span className=\"white-text text-darken-2\">Logout</span></a></Box>\r\n        </Toolbar>\r\n\r\n      </AppBar> */}\r\n      {/* <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <div>\r\n            <ListItem button onClick={e => setTabs(\"home\")} >\r\n              <ListItemIcon className={classes.icon}>\r\n                <DashboardIcon />\r\n              </ListItemIcon>\r\n              <ListItemText disableTypography primary={<Typography style={{ color: '#000000' }}>Dashboard</Typography>} />\r\n            </ListItem>\r\n            <ListItem button onClick={e => setTabs(\"aboutus\")}>\r\n              <ListItemIcon className={classes.icon}>\r\n                <InfoIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Device Locations\" />\r\n            </ListItem>\r\n            <ListItem button>\r\n              <ListItemIcon className={classes.icon}>\r\n                <ContactPhoneIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Contact Us\" />\r\n            </ListItem>\r\n          </div>\r\n        </List>\r\n      </Drawer> */}\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        {loadTabs()}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\nfunction mapStateToProps(state) {\r\n  return { auth: state.auth };\r\n}\r\nexport default connect(mapStateToProps)(Dashboard);","C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\components\\Aboutus.js",[],"C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\reducers\\authReducer.js",["132"],"import { FETCH_USER, LOGOUT } from '../actions/types';\r\n\r\nconst initialState = {\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        //if the action is fetch_user send the payload\r\n        case FETCH_USER:\r\n            return {\r\n                ...state,\r\n                // isAuthenticated: true,\r\n                loading: false,\r\n                user: payload,\r\n            };\r\n        case LOGOUT:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\reducers\\deviceReducer.js",["133"],"import { FETCH_DEVICE, FETCH_CATEGORY, FETCH_ONLINECOUNT, FETCH_OFFLINECOUNT,FETCH_HISTORY } from '../actions/types';\r\n\r\nconst initialState = {\r\n    devicesInfos: [],\r\n    onlineCount: null,\r\n    offlineCount: null,\r\n    devicesCategory: [],\r\n    devicesHistory: [],\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        //if the action is fetch_device send the payload\r\n        case FETCH_DEVICE:\r\n            return {\r\n                ...state,\r\n                devicesInfos: payload\r\n            };\r\n        case FETCH_ONLINECOUNT:\r\n            return {\r\n                ...state,\r\n                onlineCount: payload\r\n            };\r\n        case FETCH_OFFLINECOUNT:\r\n            return {\r\n                ...state,\r\n                offlineCount: payload\r\n            };\r\n        case FETCH_CATEGORY:\r\n            return {\r\n                ...state,\r\n                devicesCategory: payload\r\n            };\r\n        case FETCH_HISTORY:\r\n            return {\r\n                ...state,\r\n                devicesHistory: payload\r\n             };\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\actions\\index.js",[],"C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\components\\styles.js",[],"C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\components\\DeviceInfo.js",["134"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchDevice } from '../actions';\r\nimport TableInfo from './TableInfo';\r\nimport ClickableTable from './ClickableTable';\r\n\r\nclass DeviceInfo extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchDevice();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <ClickableTable {...this.props} />\r\n            </div>\r\n        );\r\n    }\r\n    // renderDeviceInfo(){\r\n    //     return this.props.deviceInfo.map(deviceinfo => {\r\n    //         return(\r\n    //             <tr>\r\n    //                 <td>{deviceinfo.device_id}</td>\r\n    //                 <td>{deviceinfo.institution_id}</td>\r\n    //                 <td>{deviceinfo.category}</td>\r\n    //                 <td>{deviceinfo.type}</td>\r\n    //             </tr>\r\n\r\n    //         );\r\n    //     })\r\n    // }\r\n    // render(){\r\n    //     return(\r\n    //         <div>\r\n    //         <table>\r\n    //             <thead>\r\n    //                 <tr>\r\n    //                     <th> device_id</th>\r\n    //                     <th> institution_id</th>\r\n    //                     <th> category </th>\r\n    //                     <th> type </th>\r\n    //                 </tr>\r\n    //             </thead>\r\n    //             <tbody>\r\n    //                 {this.renderDeviceInfo()}\r\n    //             </tbody>\r\n    //         </table>\r\n\r\n    //         </div>\r\n    //     );\r\n    // }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { deviceInfo: state.deviceInfo.devicesInfos }\r\n}\r\nexport default connect(mapStateToProps, { fetchDevice })(DeviceInfo);","C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\components\\TableInfo.js",["135","136","137","138","139"],"import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchOnine} from '../actions';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nconst propsT = null;\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n});\r\n\r\nexport default function CustomPaginationActionsTable(props) {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const rows = props.deviceInfo?props.deviceInfo.map(deviceinfo=>{\r\n    return {devId:deviceinfo.device_id,\r\n      instId:deviceinfo.institution_id,\r\n      cat:deviceinfo.category,\r\n      typeDev:deviceinfo.type,\r\n      status:deviceinfo.status  }\r\n  }):[{devId:\"Loading\",\r\n    instId:\"Loading\",\r\n    cat:\"Loading\",\r\n    typeDev:\"Loading\"}];\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table stickyHeader className={classes.table} aria-label=\"custom pagination table\">\r\n      <TableHead>\r\n          <TableRow>\r\n            <TableCell align='left'>Device Id</TableCell>\r\n            <TableCell align='left'>Institution Id</TableCell>\r\n            <TableCell align='left'>Category</TableCell>\r\n            <TableCell align='left'>Device Type</TableCell>\r\n            <TableCell align='left'>Status</TableCell>\r\n          </TableRow>\r\n      </TableHead>\r\n        <TableBody>\r\n          {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows\r\n          ).map((row) => (\r\n            <TableRow key={row.devId}>\r\n              <TableCell style={{ width: 160}} align =\"left\">\r\n                {row.devId}\r\n              </TableCell>\r\n              <TableCell style={{ width: 160 }} align=\"left\">\r\n                {row.instId}\r\n              </TableCell>\r\n              <TableCell style={{ width: 160 }} align=\"left\">\r\n                {row.cat}\r\n              </TableCell>\r\n              <TableCell style={{ width: 160 }} align=\"left\">\r\n                {row.typeDev}\r\n              </TableCell>\r\n              <TableCell style={{ width: 160 }} align=\"left\">\r\n                {row.status}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          {emptyRows > 0 && (\r\n            <TableRow style={{ height: 53 * emptyRows }}>\r\n              <TableCell colSpan={6} />\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n              colSpan={3}\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true,\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\actions\\types.js",[],"C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\components\\ClickableTable.js",["140","141","142"],"import React, { useEffect, useState } from 'react';\r\nimport { Modal, Button, Tab } from 'react-bootstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport './ClickableTable.css';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Badge from 'react-bootstrap/Badge'\r\n\r\nimport Summary from './Summary';\r\nimport DeviceHistory from './DeviceHistory';\r\n\r\n\r\nfunction ClickableTable(props) {\r\n\r\n  const [deviceinfo, setDeviceinfo] = useState([]);\r\n  const [q, setQ] = useState(\"\");\r\n\r\n  const [modalInfo, setModalInfo] = useState([]);\r\n  const [showModal, setShowModal] = useState([false]);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n\r\n  useEffect(() => {\r\n    setDeviceinfo(props.deviceInfo)\r\n  })\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'device_id',\r\n      text: 'Device ID',\r\n      headerStyle: { textAlign: 'center' }\r\n    },\r\n    {\r\n      dataField: 'university_id',\r\n      text: 'University ID',\r\n      headerStyle: { textAlign: 'center' }\r\n    },\r\n    {\r\n      dataField: 'category',\r\n      text: 'Category',\r\n      headerStyle: { textAlign: 'center' }\r\n    },\r\n    {\r\n      dataField: 'type',\r\n      text: 'Type',\r\n      headerStyle: { textAlign: 'center' }\r\n    },\r\n    {\r\n      dataField: 'status',\r\n      text: 'Status',\r\n      headerStyle: { textAlign: 'center' }\r\n    }\r\n  ];\r\n\r\n  const datas = deviceinfo.map(infos => (\r\n    {\r\n      device_id: infos.device_id,\r\n      university_id: infos.institution_id,\r\n      category: infos.category,\r\n      type: infos.type,\r\n      error: infos.errorText,\r\n      model: infos.model,\r\n      app_Version: infos.applicationVersion,\r\n      firware_Version: infos.firmwareVersion,\r\n      license_expiry: infos.licenseExpiry,\r\n      license_key: infos.licenseKey,\r\n      manufacturer: infos.manufacturer,\r\n      serial_number: infos.serialNumber,\r\n      status: infos.status,\r\n      status_date_time: infos.statusDateTime,\r\n      id: infos._id\r\n\r\n    }\r\n  ));\r\n\r\n  function search(rows) {\r\n\r\n    return rows.filter(\r\n      (row) =>\r\n        row.device_id.toLowerCase().indexOf(q.toLowerCase()) > -1 ||\r\n        row.university_id.toLowerCase().indexOf(q.toLowerCase()) > -1 ||\r\n        row.category.toLowerCase().indexOf(q.toLowerCase()) > -1 ||\r\n        row.type.toLowerCase().indexOf(q.toLowerCase()) > -1 ||\r\n        row.status.toLowerCase().indexOf(q.toLowerCase()) > -1\r\n\r\n    );\r\n\r\n  }\r\n\r\n\r\n  const rowEvents = {\r\n    onClick: (e, row) => {\r\n      //console.log(row)\r\n      setModalInfo(row)\r\n      toggleTrueFalse()\r\n    },\r\n  };\r\n\r\n  const toggleTrueFalse = () => {\r\n    setShowModal(handleShow);\r\n  };\r\n  const ModalContent = () => {\r\n    return (\r\n      <Modal {...props}\r\n        className=\"custom-modal \"\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        show={show} onHide={handleClose} backdrop=\"static\"\r\n        keyboard={false}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title\r\n            centered > {modalInfo.device_id}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Tabs fill variant=\"tabs\" className=\"summaryTab\" defaultActiveKey=\"summary\" headerStyle={{ fontWeight: 'bold' }} activeHeaderStyle={{ color: 'white' }} id=\"uncontrolled-tab-example\"  >\r\n            <Tab eventKey=\"summary\" title=\"Summary\">\r\n\r\n              <Summary {...modalInfo} />\r\n            </Tab>\r\n\r\n              <Tab eventKey=\"error\" title=\"Error encountered\">\r\n              <ListGroup>\r\n                 <ListGroup.Item>{modalInfo.error}</ListGroup.Item>\r\n              </ListGroup>\r\n            </Tab>\r\n            {/* else\r\n            {\r\n              <Tab eventKey=\"error\" title={<React.Fragment>Error encountered \r\n                <Badge variant='warning'>!</Badge>\r\n              </React.Fragment>}\r\n              mountOnEnter\r\n              unmountOnExit={false}>\r\n                <ListGroup>\r\n                   <ListGroup.Item>{modalInfo.error}</ListGroup.Item>\r\n                </ListGroup>\r\n              </Tab>\r\n            } */}\r\n           \r\n            <Tab eventKey=\"history\" title=\"History\">\r\n            <DeviceHistory id = {modalInfo.device_id}/>            </Tab>\r\n          </Tabs>\r\n\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n        </Modal.Footer>\r\n\r\n      </Modal>\r\n    );\r\n\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"App\">\r\n      <div>\r\n        <input size=\"sm\" className=\"mb-3\" type=\"text\" placeholder=\"Enter your search query...\" value={q} onChange={(e) => setQ(e.target.value)} />\r\n      </div>\r\n      <BootstrapTable\r\n        striped bordered hover size=\"sm\" ali\r\n        keyField=\"id\"\r\n        data={search(datas)}\r\n        columns={columns}\r\n        rowEvents={rowEvents}\r\n        pagination={paginationFactory()}\r\n      />\r\n      {show ? <ModalContent /> : null}\r\n    </div>\r\n  );\r\n\r\n}\r\nexport default ClickableTable;\r\n","C:\\Users\\Swastee\\Documents\\transact\\finalVers\\TransactEstateManagingService\\client\\src\\components\\Summary.js",["143"],"import ListGroup from 'react-bootstrap/ListGroup'\r\n\r\nfunction Summary(modalInfo){\r\n    return(\r\n<ListGroup>\r\n  <ListGroup.Item>Device Status:  {modalInfo.status}</ListGroup.Item>\r\n  <ListGroup.Item>Model:  {modalInfo.model}</ListGroup.Item>\r\n  <ListGroup.Item>Serial Number:  {modalInfo.serial_number}</ListGroup.Item>\r\n  <ListGroup.Item>Manufacturer:  {modalInfo.manufacturer}</ListGroup.Item>\r\n  <ListGroup.Item>Application Version:  {modalInfo.app_Version}</ListGroup.Item>\r\n  <ListGroup.Item>Firware Version:  {modalInfo.firware_Version}</ListGroup.Item>\r\n  <ListGroup.Item>License Key:  {modalInfo.license_key}</ListGroup.Item>\r\n  <ListGroup.Item>License Expiry Date:  {modalInfo. license_expiry}</ListGroup.Item>\r\n  <ListGroup.Item>Error message:  {modalInfo.error}</ListGroup.Item>\r\n  <ListGroup.Item>Last Status Time:  {modalInfo.status_date_time}</ListGroup.Item>\r\n  <ListGroup.Item>ID:  {modalInfo.id}</ListGroup.Item>\r\n    </ListGroup>\r\n    );\r\n\r\n}\r\nexport default Summary;",{"ruleId":"144","severity":1,"message":"145","line":15,"column":8,"nodeType":"146","messageId":"147","endLine":15,"endColumn":9},{"ruleId":"144","severity":1,"message":"148","line":16,"column":8,"nodeType":"146","messageId":"147","endLine":16,"endColumn":14},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"144","severity":1,"message":"153","line":2,"column":40,"nodeType":"146","messageId":"147","endLine":2,"endColumn":44},{"ruleId":"144","severity":1,"message":"154","line":2,"column":46,"nodeType":"146","messageId":"147","endLine":2,"endColumn":54},{"ruleId":"144","severity":1,"message":"155","line":3,"column":8,"nodeType":"146","messageId":"147","endLine":3,"endColumn":14},{"ruleId":"144","severity":1,"message":"156","line":6,"column":8,"nodeType":"146","messageId":"147","endLine":6,"endColumn":17},{"ruleId":"144","severity":1,"message":"157","line":14,"column":10,"nodeType":"146","messageId":"147","endLine":14,"endColumn":18},{"ruleId":"144","severity":1,"message":"158","line":15,"column":8,"nodeType":"146","messageId":"147","endLine":15,"endColumn":13},{"ruleId":"144","severity":1,"message":"159","line":17,"column":20,"nodeType":"146","messageId":"147","endLine":17,"endColumn":26},{"ruleId":"144","severity":1,"message":"160","line":1,"column":27,"nodeType":"146","messageId":"147","endLine":1,"endColumn":36},{"ruleId":"144","severity":1,"message":"161","line":1,"column":38,"nodeType":"146","messageId":"147","endLine":1,"endColumn":46},{"ruleId":"144","severity":1,"message":"162","line":1,"column":48,"nodeType":"146","messageId":"147","endLine":1,"endColumn":57},{"ruleId":"144","severity":1,"message":"163","line":10,"column":8,"nodeType":"146","messageId":"147","endLine":10,"endColumn":13},{"ruleId":"144","severity":1,"message":"164","line":11,"column":8,"nodeType":"146","messageId":"147","endLine":11,"endColumn":17},{"ruleId":"144","severity":1,"message":"165","line":12,"column":10,"nodeType":"146","messageId":"147","endLine":12,"endColumn":23},{"ruleId":"144","severity":1,"message":"166","line":13,"column":10,"nodeType":"146","messageId":"147","endLine":13,"endColumn":17},{"ruleId":"144","severity":1,"message":"167","line":33,"column":9,"nodeType":"146","messageId":"147","endLine":33,"endColumn":25},{"ruleId":"168","severity":1,"message":"169","line":40,"column":22,"nodeType":"170","endLine":40,"endColumn":26},{"ruleId":"168","severity":1,"message":"169","line":47,"column":22,"nodeType":"170","endLine":47,"endColumn":26},{"ruleId":"168","severity":1,"message":"169","line":54,"column":22,"nodeType":"170","endLine":54,"endColumn":26},{"ruleId":"144","severity":1,"message":"162","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":26},{"ruleId":"144","severity":1,"message":"171","line":2,"column":8,"nodeType":"146","messageId":"147","endLine":2,"endColumn":12},{"ruleId":"144","severity":1,"message":"172","line":5,"column":8,"nodeType":"146","messageId":"147","endLine":5,"endColumn":14},{"ruleId":"144","severity":1,"message":"173","line":6,"column":8,"nodeType":"146","messageId":"147","endLine":6,"endColumn":14},{"ruleId":"144","severity":1,"message":"174","line":7,"column":8,"nodeType":"146","messageId":"147","endLine":7,"endColumn":15},{"ruleId":"144","severity":1,"message":"175","line":8,"column":8,"nodeType":"146","messageId":"147","endLine":8,"endColumn":12},{"ruleId":"144","severity":1,"message":"176","line":9,"column":8,"nodeType":"146","messageId":"147","endLine":9,"endColumn":18},{"ruleId":"144","severity":1,"message":"177","line":10,"column":8,"nodeType":"146","messageId":"147","endLine":10,"endColumn":15},{"ruleId":"144","severity":1,"message":"178","line":11,"column":8,"nodeType":"146","messageId":"147","endLine":11,"endColumn":18},{"ruleId":"144","severity":1,"message":"179","line":12,"column":8,"nodeType":"146","messageId":"147","endLine":12,"endColumn":16},{"ruleId":"144","severity":1,"message":"180","line":13,"column":8,"nodeType":"146","messageId":"147","endLine":13,"endColumn":23},{"ruleId":"144","severity":1,"message":"181","line":16,"column":8,"nodeType":"146","messageId":"147","endLine":16,"endColumn":16},{"ruleId":"144","severity":1,"message":"182","line":17,"column":8,"nodeType":"146","messageId":"147","endLine":17,"endColumn":20},{"ruleId":"144","severity":1,"message":"183","line":18,"column":8,"nodeType":"146","messageId":"147","endLine":18,"endColumn":20},{"ruleId":"144","severity":1,"message":"184","line":19,"column":8,"nodeType":"146","messageId":"147","endLine":19,"endColumn":21},{"ruleId":"144","severity":1,"message":"185","line":20,"column":8,"nodeType":"146","messageId":"147","endLine":20,"endColumn":16},{"ruleId":"144","severity":1,"message":"186","line":21,"column":8,"nodeType":"146","messageId":"147","endLine":21,"endColumn":24},{"ruleId":"144","severity":1,"message":"187","line":23,"column":8,"nodeType":"146","messageId":"147","endLine":23,"endColumn":15},{"ruleId":"144","severity":1,"message":"188","line":25,"column":8,"nodeType":"146","messageId":"147","endLine":25,"endColumn":17},{"ruleId":"144","severity":1,"message":"189","line":27,"column":8,"nodeType":"146","messageId":"147","endLine":27,"endColumn":11},{"ruleId":"144","severity":1,"message":"190","line":31,"column":10,"nodeType":"146","messageId":"147","endLine":31,"endColumn":14},{"ruleId":"144","severity":1,"message":"191","line":32,"column":16,"nodeType":"146","messageId":"147","endLine":32,"endColumn":23},{"ruleId":"144","severity":1,"message":"192","line":34,"column":9,"nodeType":"146","messageId":"147","endLine":34,"endColumn":25},{"ruleId":"144","severity":1,"message":"193","line":37,"column":9,"nodeType":"146","messageId":"147","endLine":37,"endColumn":26},{"ruleId":"144","severity":1,"message":"194","line":53,"column":9,"nodeType":"146","messageId":"147","endLine":53,"endColumn":22},{"ruleId":"195","severity":1,"message":"196","line":9,"column":1,"nodeType":"197","endLine":30,"endColumn":2},{"ruleId":"195","severity":1,"message":"196","line":11,"column":1,"nodeType":"197","endLine":43,"endColumn":2},{"ruleId":"144","severity":1,"message":"188","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":17},{"ruleId":"144","severity":1,"message":"160","line":1,"column":16,"nodeType":"146","messageId":"147","endLine":1,"endColumn":25},{"ruleId":"144","severity":1,"message":"166","line":2,"column":9,"nodeType":"146","messageId":"147","endLine":2,"endColumn":16},{"ruleId":"144","severity":1,"message":"198","line":3,"column":9,"nodeType":"146","messageId":"147","endLine":3,"endColumn":19},{"ruleId":"144","severity":1,"message":"199","line":20,"column":10,"nodeType":"146","messageId":"147","endLine":20,"endColumn":21},{"ruleId":"144","severity":1,"message":"200","line":29,"column":7,"nodeType":"146","messageId":"147","endLine":29,"endColumn":13},{"ruleId":"144","severity":1,"message":"201","line":8,"column":8,"nodeType":"146","messageId":"147","endLine":8,"endColumn":13},{"ruleId":"144","severity":1,"message":"202","line":20,"column":10,"nodeType":"146","messageId":"147","endLine":20,"endColumn":19},{"ruleId":"203","severity":1,"message":"204","line":27,"column":3,"nodeType":"146","endLine":27,"endColumn":12,"suggestions":"205"},{"ruleId":"144","severity":1,"message":"201","line":2,"column":8,"nodeType":"146","messageId":"147","endLine":2,"endColumn":13},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-native-reassign",["206"],"no-negated-in-lhs",["207"],"'Link' is defined but never used.","'Redirect' is defined but never used.","'Header' is defined but never used.","'Dashboard' is defined but never used.","'Provider' is defined but never used.","'store' is defined but never used.","'Router' is defined but never used.","'Component' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Chart' is defined but never used.","'PropTypes' is defined but never used.","'fetchCategory' is defined but never used.","'connect' is defined but never used.","'fixedHeightPaper' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'clsx' is defined but never used.","'Drawer' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'List' is defined but never used.","'Typography' is defined but never used.","'Divider' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'ChevronLeftIcon' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'DashboardIcon' is defined but never used.","'InfoIcon' is defined but never used.","'ContactPhoneIcon' is defined but never used.","'Aboutus' is defined but never used.","'TableInfo' is defined but never used.","'Box' is defined but never used.","'open' is assigned a value but never used.","'setTabs' is assigned a value but never used.","'handleDrawerOpen' is assigned a value but never used.","'handleDrawerClose' is assigned a value but never used.","'renderContent' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'fetchOnine' is defined but never used.","'useDispatch' is defined but never used.","'propsT' is assigned a value but never used.","'Badge' is defined but never used.","'showModal' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setDeviceinfo'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.deviceInfo] as a second argument to the useEffect Hook.",["208"],"no-global-assign","no-unsafe-negation",{"desc":"209","fix":"210"},"Add dependencies array: [props.deviceInfo]",{"range":"211","text":"212"},[919,919],", [props.deviceInfo]"]